{
  "version": "1.7.0", 
  "nickname": "GetGridsViews", 
  "outputs": [
    [
      {
        "access": "None", 
        "name": "views", 
        "description": "A list of Honeybee-Radiance Views that are assigned to the\ninput _model.", 
        "type": null, 
        "default": null
      }, 
      {
        "access": "None", 
        "name": "grids", 
        "description": "A list of Honeybee-Radiance SensorGrids that are assigned to\nthe input _model.", 
        "type": null, 
        "default": null
      }, 
      {
        "access": "None", 
        "name": "points", 
        "description": "The points that are at the center of each grid cell.", 
        "type": null, 
        "default": null
      }, 
      {
        "access": "None", 
        "name": "meshes", 
        "description": "Mesh for each sensor grid, which can be passed to the \"LB Spatial\nHeatmap\" component.", 
        "type": null, 
        "default": null
      }
    ]
  ], 
  "inputs": [
    {
      "access": "item", 
      "name": "_model", 
      "description": "A Honeybee Model for which grids and views will be output.", 
      "type": "System.Object", 
      "default": null
    }
  ], 
  "subcategory": "0 :: Basic Properties", 
  "code": "\ntry:  # import core ladybug_geometry dependencies\n    from ladybug_geometry.geometry3d.pointvector import Point3D\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import ladybug_geometry:\\n\\t{}'.format(e))\n\ntry:  # import core honeybee dependencies\n    from honeybee.model import Model\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import honeybee:\\n\\t{}'.format(e))\n\ntry:  # import ladybug_{{cad}} dependencies\n    from ladybug_{{cad}}.fromgeometry import from_point3d, from_mesh3d\n    from ladybug_{{cad}}.{{plugin}} import all_required_inputs, list_to_data_tree\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import ladybug_{{cad}}:\\n\\t{}'.format(e))\n\n\nif all_required_inputs(ghenv.Component):\n    assert isinstance(_model, Model), \\\n        'Expected Honeybee Model. Got {}.'.format(type(_model))\n    # get the honeybee-radiance objects\n    views = _model.properties.radiance.views\n    grids = _model.properties.radiance.sensor_grids\n\n    # get the visualizable attributes\n    points = [[from_point3d(Point3D.from_array(s.pos)) for s in sg] for sg in grids]\n    points = list_to_data_tree(points)\n    meshes = []\n    for grid in grids:\n        if grid.mesh is not None:\n            meshes.append(from_mesh3d(grid.mesh))\n", 
  "category": "HB-Radiance", 
  "name": "HB Get Grids and Views", 
  "description": "Get Radiance Sensor Grids and/or Views from a Honeybee Model and visualize them\nin the Rhino scene.\n-"
}