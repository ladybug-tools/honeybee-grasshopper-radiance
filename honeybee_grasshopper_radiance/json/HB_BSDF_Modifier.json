{
  "version": "1.6.0", 
  "nickname": "BSDFMod", 
  "outputs": [
    [
      {
        "access": "None", 
        "name": "modifier", 
        "description": "A BSDF modifier that can be assigned to a Honeybee geometry\nor Modifier Sets.", 
        "type": null, 
        "default": null
      }
    ]
  ], 
  "inputs": [
    {
      "access": "item", 
      "name": "_xml_file", 
      "description": "Path to an XML file contining BSDF data. These files can\nbe produced using the LBNL WINDOW software among other sources.", 
      "type": "string", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_up_vec_", 
      "description": "A vector that sets the hemisphere that the BSDF modifier faces.\nFor materials that are symmetrical about the face plane (like\nnon-angled venetian blinds), this can be any vector that is not\nperfectly normal/perpendicular to the face. For asymmetrica\nmaterials like angled venetian blinds, this variable should be\ncoordinated with the direction that the geometry is facing.\nThe default is set to (0.01, 0.01, 1.00), which should hopefully\nnot be normal to any typical face.", 
      "type": "Vector3d", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "thickness_", 
      "description": "Optional number to set the thickness of the BSDF. Thickness\nis not supported for aBSDF type. (Default: 0).", 
      "type": "double", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_bsdf_type_", 
      "description": "An integer to set the bsdf type. Choose from the choices\nbelow. (Default: 0).\n* 0 BSDF\n* 1 aBSDF\nChoose aBSDF (peak extraction) for systems with a strong specular\ntransmission component. A proposed guideline for when to use aBSDF\ncan be found in chapter 6 in \"BSDF generation procedures for\ndaylighting systems\". Find the white paper at:\n* https://task61.iea-shc.org/publications", 
      "type": "string", 
      "default": null
    }
  ], 
  "subcategory": "1 :: Modifiers", 
  "code": "\ntry:  # import the honeybee-radiance dependencies\n    from honeybee_radiance.modifier.material import BSDF, aBSDF\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import honeybee_radiance:\\n\\t{}'.format(e))\n\ntry:  # import ladybug_{{cad}} dependencies\n    from ladybug_{{cad}}.{{plugin}} import all_required_inputs\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import ladybug_{{cad}}:\\n\\t{}'.format(e))\n\nBSDF_TYPES = ('bsdf', 'absdf')\n\nif all_required_inputs(ghenv.Component):\n    # process the vector input\n    if _up_vec_ is not None:\n        _up_vec_ = (_up_vec_.X, _up_vec_.Y, _up_vec_.Z)\n\n    if _bsdf_type_ is None:\n        _type_= 'bsdf'\n    else:\n        _type_= _bsdf_type_ if _bsdf_type_ in BSDF_TYPES else BSDF_TYPES[int(_bsdf_type_)]\n\n    # create the modifier\n    if _type_ == 'bsdf':\n        modifier = BSDF(\n            _xml_file, up_orientation=_up_vec_, thickness=thickness_)\n    else:\n        modifier = aBSDF(\n            _xml_file, up_orientation=_up_vec_)\n", 
  "category": "HB-Radiance", 
  "name": "HB BSDF Modifier", 
  "description": "Create a Bidirectional Scattering Distribution Function (BSDF) radiance modifier\nfrom an XML file.\n-"
}