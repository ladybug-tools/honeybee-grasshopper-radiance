{
  "version": "1.4.2", 
  "nickname": "AnnualIrradiance", 
  "outputs": [
    [
      {
        "access": "None", 
        "name": "results", 
        "description": "Raw result files (.ill) that contain matrices of irradiance in W/m2\nfor each time step of the wea.", 
        "type": null, 
        "default": null
      }, 
      {
        "access": "None", 
        "name": "res_direct", 
        "description": "Raw result files (.ill) that contain irradiance matrices for just the\ndirect sun at each hour of the simulation. These can be postprocessed\nusing various components under the 4::Results sub-tab.", 
        "type": null, 
        "default": null
      }, 
      {
        "access": "None", 
        "name": "avg_irr", 
        "description": "The average irradiance in W/m2 for each sensor over the Wea time period.", 
        "type": null, 
        "default": null
      }, 
      {
        "access": "None", 
        "name": "peak_irr", 
        "description": "The highest irradiance value in W/m2 during the Wea time period. This\nis suitable for assessing the worst-case solar load of clear skies on\ncooling design days. It can also be used to determine the highest\nradiant temperatures that occupants might experience in over the\ntime period of the Wea.", 
        "type": null, 
        "default": null
      }, 
      {
        "access": "None", 
        "name": "radiation", 
        "description": "The cumulative radiation in kWh/m2 over the Wea time period.", 
        "type": null, 
        "default": null
      }
    ]
  ], 
  "inputs": [
    {
      "access": "item", 
      "name": "_model", 
      "description": "A Honeybee Model for which Annual Irradiance will be simulated.\nNote that this model must have grids assigned to it.", 
      "type": "System.Object", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_wea", 
      "description": "A Wea object produced from the Wea components that are under the Light\nSources tab. This can also be the path to a .wea or a .epw file.", 
      "type": "System.Object", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_timestep_", 
      "description": "An integer for the timestep of the inpput _wea. This value is used\nto compute average irradiance and cumulative radiation. (Default: 1)", 
      "type": "int", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "visible_", 
      "description": "Boolean to indicate the type of irradiance output, which can be solar (False)\nor visible (True). Note that the output values will still be\nirradiance (W/m2) when \"visible\" is selected but these irradiance\nvalues will be just for the visible portion of the electromagnetic\nspectrum. The visible irradiance values can be converted into\nilluminance by multiplying them by the Radiance luminous efficacy\nfactor of 179. (Default: False).", 
      "type": "bool", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "north_", 
      "description": "A number between -360 and 360 for the counterclockwise difference\nbetween the North and the positive Y-axis in degrees. This can\nalso be Vector for the direction to North. (Default: 0).", 
      "type": "System.Object", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "grid_filter_", 
      "description": "Text for a grid identifer or a pattern to filter the sensor grids of\nthe model that are simulated. For instance, first_floor_* will simulate\nonly the sensor grids that have an identifier that starts with\nfirst_floor_. By default, all grids in the model will be simulated.", 
      "type": "string", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "radiance_par_", 
      "description": "Text for the radiance parameters to be used for ray\ntracing. (Default: -ab 2 -ad 5000 -lw 2e-05).", 
      "type": "string", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "run_settings_", 
      "description": "Settings from the \"HB Recipe Settings\" component that specify\nhow the recipe should be run. This can also be a text string of\nrecipe settings.", 
      "type": "System.Object", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_run", 
      "description": "Set to True to run the recipe and get results. This input can also be\nthe integer \"2\" to run the recipe silently.", 
      "type": "int", 
      "default": null
    }
  ], 
  "subcategory": "3 :: Recipes", 
  "code": "\ntry:\n    from lbt_recipes.recipe import Recipe\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import lbt_recipes:\\n\\t{}'.format(e))\n\ntry:\n    from ladybug_{{cad}}.{{plugin}} import all_required_inputs, recipe_result\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import ladybug_{{cad}}:\\n\\t{}'.format(e))\n\n\nif all_required_inputs(ghenv.Component) and _run:\n    # create the recipe and set the input arguments\n    recipe = Recipe('annual-irradiance')\n    recipe.input_value_by_name('model', _model)\n    recipe.input_value_by_name('wea', _wea)\n    recipe.input_value_by_name('timestep', _timestep_)\n    recipe.input_value_by_name('output-type', visible_)\n    recipe.input_value_by_name('north', north_)\n    recipe.input_value_by_name('grid-filter', grid_filter_)\n    recipe.input_value_by_name('radiance-parameters', radiance_par_)\n\n    # run the recipe\n    silent = True if _run > 1 else False\n    project_folder = recipe.run(run_settings_, radiance_check=True, silent=silent)\n\n    # load the results\n    try:\n        results = recipe_result(recipe.output_value_by_name('results', project_folder))\n        res_direct = recipe_result(recipe.output_value_by_name('results-direct', project_folder))\n        avg_irr = recipe_result(recipe.output_value_by_name('average-irradiance', project_folder))\n        peak_irr = recipe_result(recipe.output_value_by_name('peak-irradiance', project_folder))\n        radiation = recipe_result(recipe.output_value_by_name('cumulative-radiation', project_folder))\n    except Exception:\n        raise Exception(recipe.failure_message(project_folder))\n", 
  "category": "HB-Radiance", 
  "name": "HB Annual Irradiance", 
  "description": "Run an annual irradiance study for a Honeybee model to compute hourly solar\nirradiance for each sensor in a model's sensor grids.\n_\nThe fundamental calculation of this recipe is the same as that of \"HB Annual\nDaylight\" in that an enhaced 2-phase method is used to accurately account for\ndirect sun at each simulation step. However, this recipe computes broadband\nsolar irradiance in W/m2 instead of visible illuminance in lux.\n_\nConsequently, the average irradiance and cumulative radiation values produced from\nthis recipe are more accurate than those produced by the \"HB Cumulative Radiation\"\nrecipe. Furthermore, because the hourly irriadiance values are accurate, this\nrecipe can be used to evaluate `peak_irradiance` and determine the worst-case\nsolar loads over clear sky Weas that represent cooling design days.\n-"
}