{
  "version": "1.3.1", 
  "nickname": "PITGrid", 
  "outputs": [
    [
      {
        "access": "None", 
        "name": "results", 
        "description": "Numbers for the point-in-time value at each sensor. Values are in the\nstandard SI units of the requested input metric. These can be plugged\ninto the \"LB Spatial Heatmap\" component along with meshes of the\nsensor grids to visualize results.\n* illuminance = lux (aka. lm/m2)\n* irradiance = W/m2\n* luminance = cd/m2 (aka. lm/m2-sr)\n* radiance = W/m2-sr", 
        "type": null, 
        "default": null
      }
    ]
  ], 
  "inputs": [
    {
      "access": "item", 
      "name": "_model", 
      "description": "A Honeybee Model for which a point-in-time grid-based study will be run.\nNote that this model should have grids assigned to it in order\nto produce meaningfule results.", 
      "type": "System.Object", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_sky", 
      "description": "A Radiance sky from any of the sky components under the \"Light Sources\" tab.\nSkies can be either CIE, ClimateBased/Custom, or for a specific\nIlluminance/Irradiance. This input can also just be a text definition\nof a sky's paramters. Examples include:\n* cie 21 Mar 9:00 -lat 41.78 -lon -87.75 -tz 5 -type 0\n* climate-based 21 Jun 12:00 -lat 41.78 -lon -87.75 -tz 5 -dni 800 -dhi 120\n* irradiance 0", 
      "type": "string", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_metric_", 
      "description": "Either an integer or the full name of a point-in-time metric to be computed\nby the recipe. (Default: illuminance). Choose from the following:\n* 0 = illuminance\n* 1 = irradiance\n* 2 = luminance\n* 3 = radiance", 
      "type": "string", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "grid_filter_", 
      "description": "Text for a grid identifer or a pattern to filter the sensor grids of\nthe model that are simulated. For instance, `first_floor_*` will simulate\nonly the sensor grids that have an identifier that starts with\n`first_floor_`. By default, all grids in the model will be simulated.", 
      "type": "string", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "radiance_par_", 
      "description": "Text for the radiance parameters to be used for ray\ntracing. (Default: -ab 2 -aa 0.1 -ad 2048 -ar 64).", 
      "type": "string", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "run_settings_", 
      "description": "Settings from the \"HB Recipe Settings\" component that specify\nhow the recipe should be run. This can also be a text string of\nrecipe settings.", 
      "type": "System.Object", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_run", 
      "description": "Set to True to run the recipe and get results. This input can also be\nthe integer \"2\" to run the recipe silently.", 
      "type": "int", 
      "default": null
    }
  ], 
  "subcategory": "3 :: Recipes", 
  "code": "\ntry:\n    from lbt_recipes.recipe import Recipe\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import lbt_recipes:\\n\\t{}'.format(e))\n\ntry:\n    from ladybug_{{cad}}.{{plugin}} import all_required_inputs, recipe_result\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import ladybug_{{cad}}:\\n\\t{}'.format(e))\n\n\nif all_required_inputs(ghenv.Component) and _run:\n    # create the recipe and set the input arguments\n    recipe = Recipe('point-in-time-grid')\n    recipe.input_value_by_name('model', _model)\n    recipe.input_value_by_name('sky', _sky)\n    recipe.input_value_by_name('metric', _metric_)\n    recipe.input_value_by_name('grid-filter', grid_filter_)\n    recipe.input_value_by_name('radiance-parameters', radiance_par_)\n\n    # run the recipe\n    silent = True if _run > 1 else False\n    project_folder = recipe.run(run_settings_, radiance_check=True, silent=silent)\n\n    # load the results\n    try:\n        results = recipe_result(recipe.output_value_by_name('results', project_folder))\n    except Exception:\n        raise Exception(recipe.failure_message(project_folder))\n", 
  "category": "HB-Radiance", 
  "name": "HB Point-In-Time Grid-Based", 
  "description": "Run a point-in-time grid-based study for a Honeybee model.\n_\nPoint-in-time recipes require a sky and can output illuminance, irradiance,\nluminance or radiance.\n-"
}