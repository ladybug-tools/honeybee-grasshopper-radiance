{
  "version": "1.3.1", 
  "nickname": "TransMod", 
  "outputs": [
    [
      {
        "access": "None", 
        "name": "modifier", 
        "description": "A translucent modifier that can be assigned to a Honeybee geometry\nor Modifier Sets.", 
        "type": null, 
        "default": null
      }
    ]
  ], 
  "inputs": [
    {
      "access": "item", 
      "name": "_name_", 
      "description": "Text to set the name for the modifier and to be incorporated into\na unique modifier identifier.", 
      "type": "System.Object", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_avg_ref", 
      "description": "The average reflectance of the material. The value should be\nbetween 0 and 1.", 
      "type": "double", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_avg_trans", 
      "description": "The average transmittance of the material. The value should be\nbetween 0 and 1.", 
      "type": "double", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_is_spec_", 
      "description": "Boolean to note if the reflected component is specular (True) or\ndiffuse (False). (Default: False).", 
      "type": "bool", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_is_diffusing_", 
      "description": "Boolean to note if the tranmitted component is diffused (True)\ninstead of specular like glass (False). (Default: True).", 
      "type": "bool", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_rough_", 
      "description": "Roughness is specified as the rms slope of surface facets. A value\nof 0 corresponds to a perfectly smooth surface, and a value of 1 would be\na very rough surface. Roughness values greater than 0.2 are not very\nrealistic. (Default: 0).", 
      "type": "double", 
      "default": null
    }
  ], 
  "subcategory": "1 :: Modifiers", 
  "code": "\ntry:  # import the core honeybee dependencies\n    from honeybee.typing import clean_and_id_rad_string, clean_rad_string\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import honeybee:\\n\\t{}'.format(e))\n\ntry:  # import the honeybee-radiance dependencies\n    from honeybee_radiance.modifier.material import Trans\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import honeybee_radiance:\\n\\t{}'.format(e))\n\ntry:  # import ladybug_{{cad}} dependencies\n    from ladybug_{{cad}}.{{plugin}} import all_required_inputs\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import ladybug_{{cad}}:\\n\\t{}'.format(e))\n\n\nif all_required_inputs(ghenv.Component):\n    # set the default modifier properties\n    _is_spec_ = False if _is_spec_ is None else _is_spec_\n    _is_diffusing_ = True if _is_diffusing_ is None else _is_diffusing_\n    _rough_ = 0.0 if _rough_ is None else _rough_\n    name = clean_and_id_rad_string('TransMaterial') if _name_ is None else \\\n        clean_rad_string(_name_)\n\n    # create the modifier\n    modifier = Trans.from_average_properties(\n        name, _avg_ref, _avg_trans, _is_spec_, _is_diffusing_, _rough_)\n    if _name_ is not None:\n        modifier.display_name = _name_\n", 
  "category": "HB-Radiance", 
  "name": "HB Translucent Modifier", 
  "description": "Create a translucent radiance modifier from a reflectance and transmittance.\n_\nThe sum of the average reflectance and average transmittance must be less than 1\nand any energy not transmitted or reflected is assumed to be absorbed.\nThe resulting material will always be grey with equivalent red, green and\nblue channels.\n_\nMore properties are available with the \"HB Translucent Modifier 3\" component.\n-"
}