{
  "version": "1.3.0", 
  "nickname": "sDA", 
  "outputs": [
    [
      {
        "access": "None", 
        "name": "sDA", 
        "description": "Spatial daylight autonomy as percentage of area for each analysis grid.", 
        "type": null, 
        "default": null
      }, 
      {
        "access": "None", 
        "name": "pass_fail", 
        "description": "A data tree of zeros and ones, which indicate whether a given senor\npasses the criteria for being daylit (1) or fails the criteria (0).\nEach value is for a different sensor of the grid. These can be plugged\ninto the \"LB Spatial Heatmap\" component along with meshes of the\nsensor grids to visualize results.", 
        "type": null, 
        "default": null
      }
    ]
  ], 
  "inputs": [
    {
      "access": "tree", 
      "name": "_DA", 
      "description": "A data tree of daylight autonomy values output from the \"HB Annual Dalyight\"\nrecipe or the \"HB Annual Daylight Metrics\" component.", 
      "type": "double", 
      "default": null
    }, 
    {
      "access": "list", 
      "name": "mesh_", 
      "description": "An optional list of Meshes that align with the _DA data tree above, which\nwill be used to assign an area to each sensor. If no mesh is connected\nhere, it will be assumed that each sensor represents an equal area\nto all of the others.", 
      "type": "Mesh", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_target_DA_", 
      "description": "A number for the minimum target value for daylight autonomy\nat wich a given sensor is considered well daylit. (default: 50).", 
      "type": "double", 
      "default": null
    }
  ], 
  "subcategory": "4 :: Results", 
  "code": "\ntry:\n    from ladybug_{{cad}}.togeometry import to_mesh3d\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import ladybug_{{cad}}:\\n\\t{}'.format(e))\n\ntry:\n    from ladybug_{{cad}}.{{plugin}} import all_required_inputs, list_to_data_tree, \\\n        data_tree_to_list\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import ladybug_{{cad}}:\\n\\t{}'.format(e))\n\n\nif all_required_inputs(ghenv.Component):\n    # process the input values into a rokable format\n    da_mtx = [item[-1] for item in data_tree_to_list(_DA)]\n    _target_DA_ = 50 if _target_DA_ is None else _target_DA_\n    lb_meshes = [to_mesh3d(mesh) for mesh in mesh_]\n\n    # determine whether each point passes or fails\n    pass_fail = [[int(val > _target_DA_) for val in grid] for grid in da_mtx]\n\n    # compute spatial daylight autonomy from the pass/fail results\n    if len(lb_meshes) == 0:  # all sensors represent the same area\n        sDA = [sum(pf_list) / len(pf_list) for pf_list in pass_fail]\n    else:  # weight the sensors based on the area of mesh faces\n        sDA = []\n        for i, mesh in enumerate(lb_meshes):\n            m_area = mesh.area\n            weights = [fa / m_area for fa in mesh.face_areas]\n            sDA.append(sum(v * w for v, w in zip(pass_fail[i], weights)))\n\n    pass_fail = list_to_data_tree(pass_fail)  # convert matrix to data tree\n", 
  "category": "HB-Radiance", 
  "name": "HB Spatial Daylight Autonomy", 
  "description": "Calculate Spatial Daylight Autonomy (sDA) from lists of daylight autonomy values.\n_\nAs per IES-LM-83-12 Spatial Daylight Autonomy (sDA) is a metric describing\nannual sufficiency of ambient daylight levels in interior environments.\nIt is defined as the percent of an analysis area (the area where calcuations\nare performed -typically across an entire space) that meets a minimum\ndaylight illuminance level for a specified fraction of the operating hours\nper year. The sDA value is expressed as a percentage of area.\n-"
}